name: Sync to GitHub Repository
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

jobs:
  sync-to-github:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Check if sync needed
      id: check_sync
      run: |
        # Check if this is a sync from another repo or local changes
        if [[ "${{ github.event.head_commit.message }}" == *"[SYNC]"* ]]; then
          echo "sync_needed=false" >> $GITHUB_OUTPUT
        else
          echo "sync_needed=true" >> $GITHUB_OUTPUT
        fi

    - name: Sync to target repository
      if: steps.check_sync.outputs.sync_needed == 'true'
      env:
        TARGET_REPO: psimaker/homelab
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        # Add target repository as remote
        git remote add target https://$GH_TOKEN@github.com/$TARGET_REPO.git
        
        # Push to target repository with sync tag
        git push target main:main --force
        echo "✅ Successfully synced to $TARGET_REPO"

    - name: Create Sync Tag
      if: steps.check_sync.outputs.sync_needed == 'true'
      run: |
        git tag -a "sync-$(date +%Y%m%d-%H%M%S)" -m "Automated sync from source repository"
        git push origin --tags

  validate-changes:
    runs-on: ubuntu-latest
    needs: sync-to-github
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate Docker Compose
      run: |
        # Validate docker-compose files
        if [ -f "docker-compose.yml" ]; then
          docker-compose -f docker-compose.yml config > /dev/null
          echo "✅ Main docker-compose.yml is valid"
        fi

        # Check for other compose files
        find . -name "*docker-compose*.yml" -o -name "*docker-compose*.yaml" | while read file; do
          if [ "$file" != "./docker-compose.yml" ]; then
            docker-compose -f "$file" config > /dev/null
            echo "✅ $file is valid"
          fi
        done

    - name: Check for secrets
      run: |
        # Basic secret check
        if grep -r "password\|secret\|key\|token" . --include="*.yml" --include="*.yaml" --include="*.env" | grep -v ".env.example" | grep -v ".github"; then
          echo "❌ Potential secrets found in code"
          exit 1
        fi
        echo "✅ No hardcoded secrets found"

    - name: Validate README
      run: |
        # Check if README exists and has minimal content
        if [ ! -f "README.md" ]; then
          echo "❌ README.md missing"
          exit 1
        fi
        
        if [ $(wc -l < README.md) -lt 50 ]; then
          echo "❌ README.md too short"
          exit 1
        fi
        echo "✅ README.md validation passed"

  notify:
    runs-on: ubuntu-latest
    needs: [sync-to-github, validate-changes]
    if: always()

    steps:
    - name: Send success notification
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ Successfully synced and validated changes. Repository is production-ready!'
          })

    - name: Send failure notification
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '❌ Sync failed. Please check the validation errors in the workflow run.'
          })